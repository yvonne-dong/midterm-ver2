{"version":3,"sources":["Header.js","Components/Home/Home.js","Components/Artwork/Artwork.js","Components/Section1/Section1.js","Components/Section2/Section2.js","Components/Section3/Section3.js","Components/SpecialPrograms/Special.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","to","Home","Artwork","src","this","props","img","data","loading","error","style","backgroundColor","muted","title","artist","year","medium","text","onClick","closeArtwork","alt","Component","Section1","sec1","selected","toggleArtwork","e","i","findIndex","record","target","setState","showArtwork","state","idx","showArt","artworks","map","t","key","bind","Section2","sec2","Section3","sec3","Special","spec","Main","exact","path","component","SpecialP","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b317f66.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './App.css';\n\nconst Header = () => (\n    <header>\n        <nav>\n            <ul>\n                <div className=\"menu\" id=\"menu-home\">\n                    <li>\n                        <h2><Link to='/'>Home</Link></h2>\n                    </li>\n                </div>\n                <div className=\"menu\" id=\"menu-sec2\">\n                    <li><Link to='/sec2'>\n                        <h2>Tangible Internet</h2>\n                    </Link></li>\n                </div>\n                <div className=\"menu\" id=\"menu-sec1\">\n                    <li><Link to='/sec1'>\n                        <h2>Extended Reality</h2>\n                    </Link></li>\n                </div>\n                <div className=\"menu\" id=\"menu-sec3\">\n                    <li><Link to='/sec3'>\n                        <h2>Beyond Simulation</h2>\n                    </Link></li>\n                </div>\n                <div className=\"menu\" id=\"menu-spec\">\n                    <li><Link to='/spec'>\n                        <h2>Programs</h2>\n                    </Link></li>\n                </div>\n            </ul>\n        </nav>\n    </header>\n)\n\nexport default Header\n\n","import React from 'react'\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"main-container\">\n    <div className=\"home-title\">\n      <h1>Liminality:</h1>\n      <h2>the Intersection of Digital and Physical Space</h2>\n      <h3 id=\"name-credit\">Yanwen Dong FA19 Curating Digital Art</h3>\n    </div>\n    <div className=\"concept-container\">\n      <h1>Exhibition concept:</h1>\n      <h2 id=\"concept\">Liminality: the Intersection of Digital and Physical Space is a thematic exhibition \n        about the connection between digital and physical, virtual and real worlds. <br></br>\n        <br></br>\n        It features works by 12 artists and collectives in the form of gallery displays and installations and special programs. \n        The exhibition is divided into three sections: Tangible Internet, Extended Reality and Beyond Simulation.</h2>\n    </div>\n  </div>\n);\n\nexport default Home\n","import React, { Component } from 'react';\nimport { Palette } from 'react-palette'\nimport './Artwork.css';\n\n\nclass Artwork extends Component {\n\n    render() {\n        return (\n            <Palette src={this.props.img}>\n                {({ data, loading, error }) => (\n                    <div className=\"artwork\" style={{ backgroundColor: data.muted }}>\n                        <div className=\"artworkInner\">\n                            <div className=\"label\">\n                                <h1>{this.props.title}</h1>\n                                <h2>{this.props.artist}, {this.props.year}</h2>\n                                <h3>{this.props.medium}</h3>\n                            </div>\n\n                            <div className=\"description\">\n                                <p>{this.props.text}</p>\n                                <div className=\"artwork-close\" onClick={this.props.closeArtwork}>back</div>\n                            </div>\n                        </div>\n                        <img className=\"artwork-img\" src={this.props.img} alt=\"\" />\n                    </div>\n                )}\n            </Palette>\n        );\n    }\n}\n\nexport default Artwork;","import React, { Component } from 'react';\nimport Artwork from '../Artwork/Artwork';\nimport './Section1.css';\n\nclass Section1 extends Component {\n    data = {\n        sec1: [\n            {\n                id: 's1-1', title: 'Urban Sensing', year: 2019, artist: 'MIT Senseable City Lab',\n                medium: 'Data visualization, digital sensors, vehicles',\n                text: 'Urban Sensing is a project conducted under the guiding question of “how much urban area can be monitor with taxis equipped with sensors?”. By attaching sensors that measure air pollution, weather, traffic patterns and road quality onto to crowd-sourced urban vehicles, MIT Senseable Lab collected hyper-local data from six cities, and visualized it through tracing the traffic routes. Urban Sensing utilizes the power of digital technology to document and understand the urban environment.',\n                img: 'http://senseable.mit.edu/urban-sensing/assets/og-img.jpg'\n            },\n            {\n                id: 's1-2', title: 'Of Land and Dreams', year: 2017, artist: 'Teri Rueb and Alan Price with the Of Land and Dreams collective',\n                medium: 'Web and mobile application, visual projection',\n                text: 'Of Land and Dreams is a collaborative mapping project on creating a portrait of Dakotas in the view of local community. The work uses a mobile application to invite audience submitting images, videos, sounds and texts that can be associated with representing the space. Each submission will become a tile on the map, preserving a piece of documentation on the local urban environment in the digital space.',\n                img: 'http://terirueb.net/wp-content/uploads/2017/08/Of_Land_and_Dreams_banner-1024x281.jpg'\n            },\n            {\n                id: 's1-3', title: 'CycleVR', year: 2017, artist: 'Aaron Puzey',\n                medium: 'Google Street View, Unity, cadence monitor, stationary bicycle',\n                text: 'CycleVR is a VR installation of cycling in Google Street View. Puzey shifts the primary purposes of exercising station for world exploration, assigns an indoor device with outdoor characteristics. Through exploring a virtual representation of geographical locations in interactive panorama images, CycleVR proposes an alternative way of exploring the real world virtually.',\n                img: 'https://l3apq3bncl82o596k2d1ydn1-wpengine.netdna-ssl.com/wp-content/uploads/2017/01/cycle-britain-vr-810x572.jpg'\n            },\n            {\n                id: 's1-4', title: 'Western Fronts', year: 2017, artist: 'Rick Silva, Sound design by Kuedo + Holy Other',\n                medium: 'Single Channel 4K Video with Audio',\n                text: 'IN PROGRESS',\n                img: 'https://www.ignant.com/wp-content/uploads/2019/07/ignant-art-rick-silva-western-fronts-7-2880x1620.jpg'\n            },\n            {\n                id: 's1-5', title: 'Something Similar to Me / About Seeing Things', year: 2016, artist: 'Akihiko Taniguchi',\n                medium: '3D scanning, visual projection',\n                text: 'IN PROGRESS',\n                img: 'http://okikata.org/a/sstm/img/001.JPG'\n            }\n\n        ],\n        selected: null,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showArtwork: false\n        };\n    }\n\n    toggleArtwork = (e) => {\n        let i = this.data.sec1.findIndex(record => record.id === e.target.id);\n        this.setState({\n            showArtwork: !this.state.showArtwork,\n            selected: i\n        });\n    }\n\n    render() {\n        const idx = this.state.selected;\n        let showArt = this.data.sec1[0];\n        if (idx > -1) {\n            showArt = this.data.sec1[idx];\n        }\n\n        const artworks = this.data.sec1.map(\n            (t) =>\n                <div className=\"sec1-titles\" id={t.id} key={t.id}>\n                    <div className=\"sec1-expand\" id={t.id} onClick={this.toggleArtwork.bind(this)}>\n                        {t.title}\n                    </div>\n                    {this.state.showArtwork && this.state.selected > -1 ?\n                        <Artwork\n                            img={showArt.img}\n                            title={showArt.title}\n                            artist={showArt.artist}\n                            year={showArt.year}\n                            medium={showArt.medium}\n                            text={showArt.text}\n                            closeArtwork={this.toggleArtwork.bind(this)} />\n                        : null\n                    }\n\n\n                </div>\n        );\n\n        return (\n            <div className=\"sec1-artworks\">\n                <img className=\"plan-img\" src=\"https://66.media.tumblr.com/62c2f8eb3ecf536d11eb3c0cf71e1469/b9de8cf3bf4db4e3-93/s1280x1920/a01f2c23a00367515a9f2e456c5770876b77a096.png\" alt=\"\" />\n                {artworks}\n            </div>\n        );\n    }\n}\n\nexport default Section1;","import React, { Component } from 'react';\nimport Artwork from '../Artwork/Artwork';\nimport './Section2.css';\n\nclass Section2 extends Component {\n    data = {\n        sec2: [\n            {\n                id: 's2-1', title: 'Unnumbered Sparks', year: 2014, artist: 'Janet Echelman, Aaron Koblin',\n                medium: 'Fiber, Google Chrome, Go, Web Sockets, Web audio, WebGL, Polymer',\n                text: 'Unnumbered Sparks is a large-scale sculpture that is constantly changing based on visitor interactions. By connecting mobile devices with the sculpture, visitors can directly influence the view of the projected lighting on the sculpture in real time. As the received signals and visuals are processed and rendered through web technology, the sculpture can be seen as a physical presentation of a browser window. Unnumbered Sparks reflects the characteristics of the Internet through its interactivity and collective creation experience.',\n                img: 'http://www.unnumberedsparks.com/images/index/gallery-01.jpg'\n            },\n            {\n                id: 's2-2', title: 'Immaterials: Light painting WiFi', year: 2011, artist: 'Timo Arnall, Jørn Knutsen and Einar Sneve Martinussen',\n                medium: 'Video',\n                text: 'Immaterials: Light painting WiFi is a documentation on tracing the invisible landscape of WI-FI signal. Aiming to reveal the relationship between this immaterial field with the city space, the collective built a custom WI-FI measuring rod and used the technique of light painting to capture long-exposure photographs of the space. The results are images that display both the environment and an overlying structure of light.',\n                img: 'http://res.cloudinary.com/voyoslo/image/upload/c_fill,dpr_3.0,h_231,q_60,w_382/aho_wifi'\n            },\n            {\n                id: 's2-3', title: 'Alpha 3.4', year: 2002, artist: 'tsunamii.net',\n                medium: 'Web browser, web server, live stream displays',\n                text: 'Alpha 3.4 is a performance that reflects the infrastructure of the Internet. Documenting the entire walk from the exhibition site to the server of its website, Charles Lim Li Yong and Woon Tien Wei explores the physical presence of a seemingly virtual place. The gallery installation consists of a webcam live-stream of the server and four screens displaying the walking journey. The screens show the walker’s location interpreted as IP address, a web page of the IP address, the location on a map, and the traceroute to the IP address.',\n                img: 'http://universes-in-universe.de/car/documenta/11/brau/img/tsunamii-1.jpg'\n            },\n            {\n                id: 's2-4', title: 'One Thousand And One Market Caps', year: 2018, artist: 'Aram Bartholl',\n                medium: 'wallpaper, books, printed coffee mugs, coffee machine, surveillance camera, table, chairs',\n                text: 'IN PROGRESS',\n                img: 'https://arambartholl.com/wwwppp/wp-content/uploads/2018/07/1001-market-caps-melle-biennale-aram-bartholl-2018-02-600x400.jpg'\n            },\n            {\n                id: 's2-5', title: 'Offline Monochrome', year: 2013, artist: 'Aram Bartholl',\n                medium: 'routers',\n                text: 'IN PROGRESS',\n                img: 'https://arambartholl.com/wwwppp/wp-content/uploads/2018/05/Aram_Bartholl_Offline_Monochrome_01-800x533.jpg'\n            }\n        ],\n        selected: null,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showArtwork: false\n        };\n    }\n\n    toggleArtwork = (e) => {\n        let i = this.data.sec2.findIndex(record => record.id === e.target.id);\n        this.setState({\n            showArtwork: !this.state.showArtwork,\n            selected: i\n        });\n    }\n\n    render() {\n        const idx = this.state.selected;\n        let showArt = this.data.sec2[0];\n        if (idx > -1) {\n            showArt = this.data.sec2[idx];\n        }\n\n        const artworks = this.data.sec2.map(\n            (t) =>\n                <div className=\"sec2-titles\" id={t.id} key={t.id}>\n                    <div className=\"sec2-expand\" id={t.id} onClick={this.toggleArtwork.bind(this)}>\n                        {t.title}\n                    </div>\n                    {this.state.showArtwork && this.state.selected > -1 ?\n                        <Artwork\n                            img={showArt.img}\n                            title={showArt.title}\n                            artist={showArt.artist}\n                            year={showArt.year}\n                            medium={showArt.medium}\n                            text={showArt.text}\n                            closeArtwork={this.toggleArtwork.bind(this)} />\n                        : null\n                    }\n                </div>\n        );\n\n        return (\n            <div className=\"sec2-artworks\">\n                <img className=\"plan-img\" src=\"https://66.media.tumblr.com/49482d1ec3e53e47abbf949dcaf32d47/b9de8cf3bf4db4e3-ec/s1280x1920/80c88a119ebf88f57cf0d3fdfc8612f2059886f2.png\" alt=\"\" />\n                {artworks}\n            </div>\n        );\n    }\n}\n\nexport default Section2;","import React, { Component } from 'react';\nimport Artwork from '../Artwork/Artwork';\nimport './Section3.css';\n\nclass Section3 extends Component {\n    data = {\n        sec3: [\n            {\n                id: 's3-1', title: 'Do Androids Dream of Electric Cows?', year: 2017, artist: 'Baoyang Chen',\n                medium: 'VR, mirror maze, and sound installation',\n                text: 'Do Androids Dream of Electric Cows? disrupts the immersive and enclosed environment that VR exhibits with its onsite mirror glass structure. Presenting the experience that connects digital simulation with physical barriers, Chen explores the ontology and definition of “virtual reality”. The displayed virtual space is independent from the structure, imposing a restriction and dilemma on how the audience would navigate around the space. The mirror glass walls expose the participants movements to outsiders, integrating their actions as performance that completes the experience.',\n                img: 'https://freight.cargo.site/t/original/i/b706b1bc7a8cc7e8eefb266627b66e17fc348293424ab23d2df5a9243dc78016/BCHEN_04.jpg'\n            },\n            {\n                id: 's3-2', title: 'Studio Visit', year: 2018, artist: 'Theo Triantafyllidis',\n                medium: 'Prints on Plywood, HDTVs on Wooden stands Room, Scale Tracking, Gaming PC, Performance Documentation',\n                text: 'IN PROGRESS',\n                img: 'https://miro.medium.com/max/2400/0*hpe87LoVQNe8OkxU.jpg'\n            },\n            {\n                id: 's3-3', title: 'Hyper-Reality', year: 2016, artist: 'Matsuda Keiichi',\n                medium: '3D Video',\n                text: 'IN PROGRESS',\n                img: 'http://hyper-reality.co/assets/HQ_images/hyper-reality_02.jpg'\n            }\n        ],\n        selected: null,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showArtwork: false\n        };\n    }\n\n    toggleArtwork = (e) => {\n        let i = this.data.sec3.findIndex(record => record.id === e.target.id);\n        this.setState({\n            showArtwork: !this.state.showArtwork,\n            selected: i\n        });\n    }\n\n    render() {\n        const idx = this.state.selected;\n        let showArt = this.data.sec3[0];\n        if (idx > -1) {\n            showArt = this.data.sec3[idx];\n        }\n\n        const artworks = this.data.sec3.map(\n            (t) =>\n                <div className=\"sec3-titles\" id={t.id} key={t.id}>\n                    <div className=\"sec3-expand\" id={t.id} onClick={this.toggleArtwork.bind(this)}>\n                        {t.title}\n                    </div>\n                    {this.state.showArtwork && this.state.selected > -1 ?\n                        <Artwork\n                            img={showArt.img}\n                            title={showArt.title}\n                            artist={showArt.artist}\n                            year={showArt.year}\n                            medium={showArt.medium}\n                            text={showArt.text}\n                            closeArtwork={this.toggleArtwork.bind(this)} />\n                        : null\n                    }\n                </div>\n        );\n\n        return (\n            <div className=\"sec3-artworks\">\n                <img className=\"plan-img\" src=\"https://66.media.tumblr.com/9f0b6fdcca0edce93b112abd5318bc71/b9de8cf3bf4db4e3-0c/s1280x1920/2a19250768001fd3a6316c1f121e476f08db4828.png\" alt=\"\" />\n                {artworks}\n            </div>\n        );\n    }\n}\n\nexport default Section3;","import React, { Component } from 'react';\nimport Artwork from '../Artwork/Artwork';\nimport './Special.css';\n\nclass Special extends Component {\n    data = {\n        spec: [\n            {\n                id: 's4-1', title: 'Augmented Reality Monuments Tour', year: 2017, artist: 'Movers and Shakers',\n                medium: 'AR',\n                text: 'IN PROGRESS',\n                img: 'https://images.squarespace-cdn.com/content/v1/593f0d1a37c58186b664781b/1541656298816-NE7NKTSN4XYZYX7YD11F/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/DSC07461.jpg'\n            },\n            {\n                id: 's4-2', title: '4th Wall AR', year: 2018, artist: 'Nancy Baker Cahill',\n                medium: 'AR',\n                text: 'IN PROGRESS',\n                img: 'https://www.artnews.com/wp-content/uploads/2018/08/tzolkin-memorial-finalnuevolaredomexicophotocreditalejandra-munoz.jpg?w=1024'\n            },\n            {\n                id: 's4-3', title: 'The Internet Yami-ichi', year: \"2012-\", artist: '',\n                medium: 'Event',\n                text: 'IN PROGRESS',\n                img: 'http://yami-ichi.biz/assets/images/bologna.jpg'\n            },\n            {\n                id: 's4-4', title: 'Anti-Gone', year: 2019, artist: 'Theo Triantafyllidis',\n                medium: 'Mixed Reality Performance',\n                text: 'IN PROGRESS',\n                img: 'https://humanresourcesla.com/wp-content/uploads/2019/05/screen_6160x4620_2019-04-29_19-40-38-1024x768.jpg'\n            }\n        ],\n        selected: null,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showArtwork: false\n        };\n    }\n\n    toggleArtwork = (e) => {\n        let i = this.data.spec.findIndex(record => record.id === e.target.id);\n        this.setState({\n            showArtwork: !this.state.showArtwork,\n            selected: i\n        });\n    }\n\n    render() {\n        const idx = this.state.selected;\n        let showArt = this.data.spec[0];\n        if (idx > -1) {\n            showArt = this.data.spec[idx];\n        }\n\n        const artworks = this.data.spec.map(\n            (t) =>\n                <div className=\"spec-titles\" id={t.id} key={t.id}>\n                    <div className=\"spec-expand\" id={t.id} onClick={this.toggleArtwork.bind(this)}>\n                        {t.title}\n                    </div>\n                    {this.state.showArtwork && this.state.selected > -1 ?\n                        <Artwork\n                            img={showArt.img}\n                            title={showArt.title}\n                            artist={showArt.artist}\n                            year={showArt.year}\n                            medium={showArt.medium}\n                            text={showArt.text}\n                            closeArtwork={this.toggleArtwork.bind(this)} />\n                        : null\n                    }\n                </div>\n        );\n\n        return (\n            <div className=\"spec-main\">\n                <div className=\"program-title\">\n                    <h1>Special Programs:</h1>\n                    <h2 id=\"description\">Event<br></br> Internet Yami-Ichi (Internet black market)</h2>\n                    <h2 id=\"description\">Performance<br></br>Anti-Gone by Theo Triantafyllidis</h2>\n                    <h2 id=\"description\">AR platform<br></br>4th Wall AR <br></br> Augmented Reality Monument Tour</h2>\n                </div>\n                <div className=\"spec-artworks\">\n                    {artworks}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Special;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from \"./Components/Home/Home\"\nimport Section1 from './Components/Section1/Section1'\nimport Section2 from './Components/Section2/Section2'\nimport Section3 from './Components/Section3/Section3'\nimport SpecialP from './Components/SpecialPrograms/Special'\nimport './App.css';\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route path='/sec1' component={Section1} />\n      <Route path='/sec2' component={Section2} />\n      <Route path='/sec3' component={Section3} />\n      <Route path='/spec' component={SpecialP} />\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport './App.css';\n\nconst App = () => (\n  <div>\n    <Header />\n    <Main />\n  </div>\n)\n\nexport default App;\n\n// import React, { Component } from 'react';\n// import Header from './Components/Header/Header'\n// import Main from './Main'\n// import './App.css';\n\n// class App extends Component {\n//   render() {\n\n//     return (\n//       <div className=\"App\">\n//         <div>\n//           <Header />\n//           <Main />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n/*\nclass App extends Component {\n  data = {\n    sec1: [\n      {\n        id: 's1-1', title: 'Urban Sensing', year: 2019, artist: 'MIT Senseable City Lab',\n        medium: 'Data visualization, digital sensors, vehicles',\n        text: 'Urban Sensing is a project conducted under the guiding question of “how much urban area can be monitor with taxis equipped with sensors?”. By attaching sensors that measure air pollution, weather, traffic patterns and road quality onto to crowd-sourced urban vehicles, MIT Senseable Lab collected hyper-local data from six cities, and visualized it through tracing the traffic routes. Urban Sensing utilizes the power of digital technology to document and understand the urban environment.',\n        img: 'http://senseable.mit.edu/urban-sensing/assets/og-img.jpg'\n      },\n      {\n        id: 's1-2', title: 'Of Land and Dreams', year: 2017, artist: 'Teri Rueb and Alan Price with the Of Land and Dreams collective',\n        medium: 'Web and mobile application',\n        text: 'Of Land and Dreams is a collaborative mapping project on creating a portrait of Dakotas in the view of local community. The work uses a mobile application to invite audience submitting images, videos, sounds and texts that can be associated with representing the space. Each submission will become a tile on the map, preserving a piece of documentation on the local urban environment in the digital space.',\n        img: 'http://terirueb.net/wp-content/uploads/2017/08/Of_Land_and_Dreams_banner-1024x281.jpg'\n      },\n      {\n        id: 's1-3', title: 'CycleVR', year: 2017, artist: 'Aaron Puzey',\n        medium: 'Google Street View, Unity, cadence monitor, stationary bicycle',\n        text: 'CycleVR is a VR installation of cycling in Google Street View. Puzey shifts the primary purposes of exercising station for world exploration, assigns an indoor device with outdoor characteristics. Through exploring a virtual representation of geographical locations in interactive panorama images, CycleVR proposes an alternative way of exploring the real world virtually.',\n        img: 'https://l3apq3bncl82o596k2d1ydn1-wpengine.netdna-ssl.com/wp-content/uploads/2017/01/cycle-britain-vr-810x572.jpg'\n      }\n    ],\n    sec2: [\n      {\n        id: 's2-1', title: 'Unnumbered Sparks', year: 2014, artist: 'Janet Echelman, Aaron Koblin',\n        medium: 'Fiber, Google Chrome, Go, Web Sockets, Web audio, WebGL, Polymer',\n        text: 'Unnumbered Sparks is a large-scale sculpture that is constantly changing based on visitor interactions. By connecting mobile devices with the sculpture, visitors can directly influence the view of the projected lighting on the sculpture in real time. As the received signals and visuals are processed and rendered through web technology, the sculpture can be seen as a physical presentation of a browser window. Unnumbered Sparks reflects the characteristics of the Internet through its interactivity and collective creation experience.',\n        img: 'http://www.unnumberedsparks.com/images/index/gallery-01.jpg'\n      },\n      {\n        id: 's2-2', title: 'Immaterials: Light painting WiFi', year: 2011, artist: 'Timo Arnall, Jørn Knutsen and Einar Sneve Martinussen',\n        medium: 'Video',\n        text: 'Immaterials: Light painting WiFi is a documentation on tracing the invisible landscape of WI-FI signal. Aiming to reveal the relationship between this immaterial field with the city space, the collective built a custom WI-FI measuring rod and used the technique of light painting to capture long-exposure photographs of the space. The results are images that display both the environment and an overlying structure of light.',\n        img: 'http://res.cloudinary.com/voyoslo/image/upload/c_fill,dpr_3.0,h_231,q_60,w_382/aho_wifi'\n      },\n      {\n        id: 's2-3', title: 'Alpha 3.4', year: 2002, artist: 'tsunamii.net',\n        medium: 'Web browser, web server, live stream displays',\n        text: 'Alpha 3.4 is a performance that reflects the infrastructure of the Internet. Documenting the entire walk from the exhibition site to the server of its website, Charles Lim Li Yong and Woon Tien Wei explores the physical presence of a seemingly virtual place. The gallery installation consists of a webcam live-stream of the server and four screens displaying the walking journey. The screens show the walker’s location interpreted as IP address, a web page of the IP address, the location on a map, and the traceroute to the IP address.',\n        img: 'http://universes-in-universe.de/car/documenta/11/brau/img/tsunamii-1.jpg'\n      }\n    ],\n    selected: null,\n    page: \"sec1\"\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showArtwork: false\n    };\n  }\n\n  toggleArtwork = (e) => {\n    let i = this.data[this.data.page].findIndex(record => record.id === e.target.id);\n    this.setState({\n      showArtwork: !this.state.showArtwork,\n      selected: i\n    });\n  }\n\n  render() {\n    const idx = this.state.selected;\n    let showArt = this.data[this.data.page][0];\n    if (idx > -1) {\n      showArt = this.data[this.data.page][idx];\n    }\n\n    const artworks = this.data[this.data.page].map(\n      (t) =>\n        <div className=\"app-artwork\" id={t.id} key={t.id}>\n          <div id={t.id} onClick={this.toggleArtwork.bind(this)}>{t.title}</div>\n          {this.state.showArtwork && this.state.selected > -1 ?\n            <Artwork\n              img={showArt.img}\n              title={showArt.title}\n              artist={showArt.artist}\n              year={showArt.year}\n              medium={showArt.medium}\n              text={showArt.text}\n              closeArtwork={this.toggleArtwork.bind(this)} />\n            : null\n          }\n        </div>\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"artworks\">\n          {artworks}\n        </div>\n        <button onClick={() => this.data.page = \"sec1\"}>sec1</button>\n        <button onClick={() => this.data.page = \"sec2\"}>sec2</button>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    (<BrowserRouter>\n        <App />\n    </BrowserRouter>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}